quarkus.log.console.color = false
quarkus.log.console.format = %d %p [%t] %c{1} - %m%n
quarkus.log.level = INFO
quarkus.log.category."it.fvaleri".level = INFO
quarkus.native.enable-jni = true
quarkus.banner.enabled = false

# configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-price.connector = smallrye-kafka
mp.messaging.outgoing.generated-price.topic = prices
# the stream is consumed as an SSE, waiting lazily for the first connection to trigger the whole stream
mp.messaging.incoming.prices.health-readiness-enabled = false
mp.messaging.outgoing.generated-price.value.serializer = org.apache.kafka.common.serialization.IntegerSerializer

# configure the Kafka source (we read from it)
mp.messaging.incoming.prices.connector = smallrye-kafka
mp.messaging.incoming.prices.topic = prices
mp.messaging.incoming.prices.value.deserializer = org.apache.kafka.common.serialization.IntegerDeserializer

# configure SmallRye Kafka connector to conenct to local cluster
kafka.bootstrap.servers = ${BOOTSTRAP_URL}
kafka.security.protocol = PLAINTEXT

# configure SmallRye Kafka connector to conenct to OSD cluster
#kafka.bootstrap.servers = ${BOOTSTRAP_URL}
#kafka.security.protocol = SSL
#kafka.ssl.truststore.location = ${TRUSTSTORE_PATH}
#kafka.ssl.truststore.password = ${TRUSTSTORE_PASS}

# configure SmallRye Kafka connector to conenct to RHOSAK (SASL/OAUTHBEARER)
#kafka.bootstrap.servers = ${BOOTSTRAP_URL}
#kafka.security.protocol = SASL_SSL
#kafka.sasl.mechanism = OAUTHBEARER
#kafka.sasl.login.callback.handler.class = io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
#kafka.sasl.jaas.config = org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#    oauth.client.id = "${OAUTH_CLIENT_ID}" \
#    oauth.client.secret = "${OAUTH_CLIENT_SECRET}" \
#    oauth.token.endpoint.uri = "${OAUTH_TOKEN_ENDPOINT_URI}";

# configure SmallRye Kafka connector to conenct to RHOSAK (SASL/PLAIN)
#kafka.bootstrap.servers = ${BOOTSTRAP_URL}
#kafka.security.protocol = SASL_SSL
#kafka.sasl.mechanism = PLAIN
#kafka.sasl.jaas.config = org.apache.kafka.common.security.plain.PlainLoginModule required \
#    username = "${CLIENT_ID}" \
#    password = "${CLIENT_SECRET}";
